apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
  namespace: test-ns
spec:
  replicas: 2
  revisionHistoryLimit:
  strategy:
  ## indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50% #max no of pod unavailable during update process
      maxSurge: 10% #max new no of pod get during this proces
  minReadySeconds: 30  #it will wait 30 sec after creation of new pod then it will delete old pods
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: docker8955/spring-boot-mongo:latest
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080

---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongorc
  namespace: test-ns
spec:
  replicas: 1
  selector:
    app: mongo
  template:
    metadata:
      name: mongopod
      labels:
        app: mongo
    spec:
      containers:
      - name: mongocontainer
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb123
        volumeMounts:
        - name: mongodbvol
          mountPath: /data/db
      volumes:
      - name: mongodbvol
        persistentVolumeClaim:
          claimName: mongohostpathpv
 
---

apiVersion: v1           
kind: PersistentVolumeClaim
metadata:
  name: mongohostpathpv
  namespace: test-ns
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  namespace: test-ns
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: hostpathpv
spec:
  storageClassName: nfs-storageclass 
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi 
  nfs:
    server: 192.168.0.179
    path: /mnt/nfs_share
    