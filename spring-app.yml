apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdeployment
  namespace: test-ns
spec:
  replicas: 2
  revisionHistoryLimit:
  strategy:
  ## indicate which strategy we want for rolling update
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50% #max no of pod unavailable during update process
      maxSurge: 10% #max new no of pod get during this proces
  minReadySeconds: 30  #it will wait 30 sec after creation of new pod then it will delete old pods
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: docker8955/spring-boot-mongo:latest
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 256Mi
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongodb-service
        - name: MONGO_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: mongoconfigmap
              key: mongodbusername
        - name: MONGO_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongosecret
              key: mongodbpassword
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongoconfigmap
  namespace: test-ns
data:
  mongodbusername: devdb
---
apiVersion: v1
kind: Secret
metadata:
  name: mongosecret
  namespace: test-ns
type: Opaque
stringData:
  mongodbpassword: devdb123
